import React, { useState, useEffect } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { Note } from "@prisma/client";
import { Icon } from "@iconify/react";

import NoteOverview from "../components/NoteOverview.component";

const Home: NextPage = () => {
  const [noteData, setNoteData] = useState<{
    title: string;
    description: string;
  }>({
    title: "",
    description: "",
  });
  const [myNotes, setMyNotes] = useState<any | null>();

  const { mutate, error } = trpc.useMutation(["notes.create-note"], {
    onError: (err) => {
      console.log(err);
    },
    onSuccess: (data) => {
      console.log(data, "this is from the api mf!");
      setMyNotes(data);
      setNoteData({
        title: "",
        description: "",
      });
    },
  });

  const handleChange = (
    e:
      | React.ChangeEvent<HTMLInputElement>
      | React.ChangeEvent<HTMLTextAreaElement>
  ) => {
    setNoteData({
      ...noteData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = () => {
    mutate(noteData);
  };

  const notes = trpc.useQuery(["notes.getAll"], {
    onSuccess: (data) => {
      setMyNotes(data);
    },
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <div className="flex w-full flex-col items-center gap-8">
          <h1 className="text-2xl font-bold">
            Awesome note makeer that uses T3
          </h1>
          <input
            type="text"
            placeholder="Title"
            name="title"
            onChange={handleChange}
            value={noteData.title}
            className="w-3/5 rounded-lg border-2 border-gray-500 p-3 outline-none"
          />
          <textarea
            name="description"
            onChange={handleChange}
            value={noteData.description}
            id=""
            cols={20}
            rows={5}
            placeholder="Description"
            className="w-3/5 rounded-lg border-2 border-gray-500 p-3 outline-none"
          ></textarea>
          <button
            onClick={handleSubmit}
            className="rounded-md bg-blue-500 px-4 py-2 text-sm text-white"
          >
            ADD NOTE
          </button>
        </div>
        <div className="mt-5 flex w-full flex-wrap gap-8">
          {myNotes?.length > 0 &&
            myNotes?.map((note: Note) => (
              <NoteOverview
                note={note}
                myNotes={myNotes}
                setMyNotes={setMyNotes}
              />
            ))}
        </div>

        {/* <div className="flex w-full items-center justify-center pt-6 text-2xl text-blue-500">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div> */}
      </main>
    </>
  );
};

export default Home;
